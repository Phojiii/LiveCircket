{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/live",
      "regex": "^/live(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/live(?:/)?$"
    },
    {
      "page": "/rankings",
      "regex": "^/rankings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/rankings(?:/)?$"
    },
    {
      "page": "/rankings-t20-batsmen",
      "regex": "^/rankings\\-t20\\-batsmen(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/rankings\\-t20\\-batsmen(?:/)?$"
    },
    {
      "page": "/recent",
      "regex": "^/recent(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/recent(?:/)?$"
    },
    {
      "page": "/upcoming",
      "regex": "^/upcoming(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/upcoming(?:/)?$"
    }
  ],
  "dataRoutes": [
    {
      "page": "/live",
      "dataRouteRegex": "^/_next/data/OQjlcKXl7esY1Cl\\-PK1Fh/live\\.json$"
    },
    {
      "page": "/rankings",
      "dataRouteRegex": "^/_next/data/OQjlcKXl7esY1Cl\\-PK1Fh/rankings\\.json$"
    },
    {
      "page": "/rankings-t20-batsmen",
      "dataRouteRegex": "^/_next/data/OQjlcKXl7esY1Cl\\-PK1Fh/rankings-t20-batsmen\\.json$"
    },
    {
      "page": "/recent",
      "dataRouteRegex": "^/_next/data/OQjlcKXl7esY1Cl\\-PK1Fh/recent\\.json$"
    },
    {
      "page": "/upcoming",
      "dataRouteRegex": "^/_next/data/OQjlcKXl7esY1Cl\\-PK1Fh/upcoming\\.json$"
    }
  ],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}